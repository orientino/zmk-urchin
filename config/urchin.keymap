/*
 * Copyright (c) 2024 orientino
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define SY1 1
#define SY2 2
#define FUN 3
#define RST 4


/ {
    combos {
        #include "combos.dtsi"    
    };
};


/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯         */


/ {
	keymap {
		compatible = "zmk,keymap";

		base_layer {
			label = "base";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T           		&kp Y &kp U &kp I &kp O &kp P 
			&kp A &kp S &kp D &kp F &kp G           		&kp H &kp J &kp K &kp L &kp BSPC
			&kp Z &kp X &kp C &kp V &kp B           		&kp N &kp M &kp COMMA &kp DOT &kp RET
						&mo SY2 &sk LCMD	       			&kp SPACE &mo SY1
			>;
		};

		sy1_layer {
			label = "num.";
			bindings = <
			&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		     	&kp N6 &kp N7 &kp N8 &kp N9 &kp N0
			&kp TILDE &kp LPAR &kp LBKT &kp LBRC &kp LT  	&none &kp EQUAL &kp FSLH &kp STAR &kp EXCL
			&kp GRAVE &kp RPAR &kp RBKT &kp RBRC &kp GT  	&none &kp UNDER &kp MINUS &kp PLUS &kp QMARK
									&sk LSHFT &sk LCTL  	&sk LALT &sk LSHFT  
			>;
		};

		Sy2_layer {
			label = "sym.";
			bindings = <
			&kp ESC &kp AT &kp HASH &kp DLLR &kp PRCNT 		&kp CARET &kp AMPS &kp PIPE &kp BSLH &kp HOME
			&kp CAPS &kp TAB &none &none &none				&kp DQT &kp COLON &kp SEMI &kp UP &kp END
			&none &none &none &none &none 					&kp SQT &kp UNDER &kp LEFT &kp DOWN &kp RIGHT
									&mo FUN &sk LALT  		&sk LCTL &mo FUN
			>;
		};

		fun_layer {
			label = "fun.";
			bindings = <
			&none &none &kp LC(LS(TAB)) &kp LC(TAB) &none									&kp F1 &kp F2 &kp F10 &kp F11 &kp F12
			&kp LC(N1) &kp LC(N2) &kp LC(N3) &kp LC(N4) &kp LC(N5)							&kp LC(H) &kp LC(J) &kp LC(K) &kp LC(L) &none
			&kp LC(LS(N1)) &kp LC(LS(N2)) &kp LC(LS(N3)) &kp LC(LS(N4)) &kp LC(LS(N5))		&kp LC(LS(H)) &kp LC(LS(J)) &kp LC(LS(K)) &kp LC(LS(L)) &none
															&none &mo RST					&none &none  
			>;
		};

		res_layer {
			label = "reset";
			bindings = <
			&none &none &none &none &none					&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &none
			&none &none &none &none &none					&none &none &none &none &none
			&none &none &none &none &none                  	&none &none &none &none &bootloader
							&none &none						&none &none  
			>;
		};
	};
};
